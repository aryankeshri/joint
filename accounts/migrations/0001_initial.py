# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-06-10 09:22
from __future__ import unicode_literals

import accounts.models
import accounts.validation
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='RdxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_ .,]*$', message='Only alphabet are allowed.')], verbose_name='Username')),
                ('mobile', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Please Enter correct Contact no.', regex='^\\d{10,13}$')], verbose_name='Contact no')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date of joining')),
                ('country_code', models.CharField(default='+91', max_length=4)),
                ('iso', models.CharField(default='IN', max_length=4)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_admin', models.BooleanField(default=False, verbose_name='admin')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff')),
                ('blocked', models.BooleanField(default=False, verbose_name='blocked')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=accounts.models.upload_image, validators=[accounts.validation.image_extension])),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('new_mobile', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Please Enter correct Contact no.', regex='^\\d{10,13}$')], verbose_name='Contact no')),
                ('new_country_code', models.CharField(default='+91', max_length=4)),
                ('new_iso', models.CharField(default='IN', max_length=4)),
                ('otp', models.CharField(blank=True, max_length=6)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male')], default='male', max_length=30)),
                ('initial_reg', models.BooleanField(default=False)),
                ('final_reg', models.BooleanField(default=False)),
                ('mobile_verify', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'swappable': 'AUTH_USER_MODEL',
                'verbose_name_plural': 'Users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='IN', max_length=250)),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=accounts.models.upload_image, validators=[accounts.validation.image_extension])),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
